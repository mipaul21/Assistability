@model DataViewModels.HabGoalViewModel

@{
    ViewBag.Title = "Habitual Goals";
}
@Html.Action("GroupMemberList", "GroupMemberList")

<h2>Create an Habitual Goal</h2>

@using (Html.BeginForm("AddHabGoal", "Goal", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="display:inline-block">
        <h4>Habitual Goals</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.HabGoalName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HabGoalName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HabGoalName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HabGoalDescription, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HabGoalDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HabGoalDescription, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.RoutineName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoutineName, new SelectList(ViewBag.RoutineNameList), new { htmlAttributes = new { @class = "form-control", @id="dropdowns"} })
                @Html.ValidationMessageFor(model => model.RoutineName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoutineFrequency, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoutineFrequency, new { htmlAttributes = new { @class = "form-control", @type="number" } })
                @Html.ValidationMessageFor(model => model.RoutineFrequency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HabGoalTargetDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HabGoalTargetDate, new { htmlAttributes = new { @class = "form-control", @type= "date", @id="targetDate"} })
                @Html.ValidationMessageFor(model => model.HabGoalTargetDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AwardName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AwardName, new SelectList(ViewBag.AwardNameList) , new { htmlAttributes = new { @class = "form-control", @id="dropdowns"} })
                @Html.ValidationMessageFor(model => model.AwardName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("View Active Habitual Goals", "ViewActiveHabGoals") &nbsp;| &nbsp;
    @Html.ActionLink("Return to Goals", "Goals")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
