@model DataViewModels.AttGoalViewModel

@{
    ViewBag.Title = "Attainment Goals";
}
@Html.Action("GroupMemberList", "GroupMemberList")

<h2>Create an Attainment Goal</h2>

@using (Html.BeginForm("AddAttGoal", "Goal", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="display:inline-block">
        <h4>Attainmnent Goals</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.AttGoalName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 45%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AttGoalName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AttGoalName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttGoalDescription, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AttGoalDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AttGoalDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PerformanceName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PerformanceName, new SelectList(ViewBag.PerformanceNameList), new { htmlAttributes = new { @class = "form-control", @id = "dropdowns", @style = "float:center" } })
                @Html.ValidationMessageFor(model => model.PerformanceName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PerformanceFrequency, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PerformanceFrequency, new { htmlAttributes = new { @class = "form-control", @type="number" } })
                @Html.ValidationMessageFor(model => model.PerformanceFrequency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttGoalTargetDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AttGoalTargetDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "targetDate" } })
                @Html.ValidationMessageFor(model => model.AttGoalTargetDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AwardName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AwardName, new SelectList(ViewBag.AwardNameList), new { htmlAttributes = new { @class = "form-control", @id = "dropdowns" } })
                @Html.ValidationMessageFor(model => model.AwardName, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("View Active Attainment Goals", "ViewActiveAttGoal") &nbsp;| &nbsp;
    @Html.ActionLink("Return to Goals", "Goals")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
