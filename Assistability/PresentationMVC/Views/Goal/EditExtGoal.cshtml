@model DataViewModels.ExtGoalViewModel

@{
    ViewBag.Title = "Edit " + Model.ExtGoalName;
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("UpdateExtGoal", "Goal", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="display:inline-block">
        <h4>Edit Extinction Goal</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.UserID_client, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align:left" });
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID_client, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserID_client, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.UserID_admin, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID_admin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserID_admin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtGoalName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtGoalName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ExtGoalName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtGoalDescription, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtGoalDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExtGoalDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtGoalTargetDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 50%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtGoalTargetDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ExtGoalTargetDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtGoalEntryDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtGoalEntryDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ExtGoalEntryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.ExtGoalEditDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtGoalEditDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExtGoalEditDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.ExtGoalRemovalDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtGoalRemovalDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExtGoalRemovalDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncidentFrequency, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IncidentFrequency, new { htmlAttributes = new { @class = "form-control", type="number" } })
                @Html.ValidationMessageFor(model => model.IncidentFrequency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 25%; text-align:left" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @style = "margin-left: 5%" } })
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AwardName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align:left" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AwardName, new SelectList(ViewBag.AwardNamesList, ViewBag.CurrentAwardName), new { htmlAttributes = new { @class = "form-control", @id = "dropdowns" } })
                @Html.ValidationMessageFor(model => model.AwardName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncidentName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IncidentName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.IncidentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("View active Extinction Goals", "ViewActiveExtGoal") &nbsp;|&nbsp;
    @Html.ActionLink("View all Extinction Goals", "ViewExtGoal") &nbsp;|&nbsp;
    @Html.ActionLink("Return to Goals", "Goals")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
