@model DataStorageModels.Performance

@{
    ViewBag.Title = "Edit "+Model.PerformanceName;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("EditPerformance", "Performance", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" style="display:inline-block">
        <h4>Performance</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID_client, Model.UserID_client)
        <div class="form-group">
            @Html.LabelFor(model => model.PerformanceName, "Performance Name", htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 38%" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PerformanceName, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly", @style = "width: 90%; text-align: center" })
                @Html.ValidationMessageFor(model => model.PerformanceName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PerformanceDescription, "Performance Description", htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 48%; text-align: center" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PerformanceDescription, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.PerformanceDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "EditablePerformances", new { SelectedId = Model.UserID_client})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
