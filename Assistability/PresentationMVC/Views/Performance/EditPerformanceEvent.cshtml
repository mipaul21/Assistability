@model DataStorageModels.PerformanceEvent

@{
    ViewBag.Title = "EditPerformanceEvent";
    IEnumerable<String> performanceNames = (IEnumerable<String>)ViewBag.PerformanceNames;
}

<h2>EditPerformanceEvent</h2>


@using (Html.BeginForm("UpdatePerformanceEvent", "Performance", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal" style="display:inline-block">
    <h4>PerformanceEvent</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PerformanceEventID)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.DateOfOccurance)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EventEditDate)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserIDClient)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserIDReporter)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PerformanceName)

    <div class="form-group">
        @Html.LabelFor(model => model.EventDescription, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventResult, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 40%; text-align: left;" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventResult, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventResult, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Performance Events", "PerformanceEvents", new { Name = Model.PerformanceName, SelectedId = Model.UserIDClient })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
